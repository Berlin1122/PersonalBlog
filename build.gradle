plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "org.hidetake.ssh" version "2.10.1"
}

group = 'com.chenyulin'
version = '1.1.0'
sourceCompatibility = '1.8'

ssh.settings {
    knownHosts = allowAnyHosts
}

remotes {
    deployServer {
        host = 'localhost'
        user = 'someValue'
        password = 'someValue'
    }
}


repositories {
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    maven { url 'https://maven.aliyun.com/repository/google' }
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'https://maven.aliyun.com/repository/jcenter' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1'
    implementation 'net.sourceforge.nekohtml:nekohtml:1.9.22'
    implementation 'commons-fileupload:commons-fileupload:1.4'
    implementation 'net.coobird:thumbnailator:0.4.8'
    implementation 'org.springframework.boot:spring-boot-autoconfigure:2.1.3.RELEASE'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

task deleteOld(){
    ssh.run {
        session(remotes.deployServer) {
            println 'start deleting...'
            executeScript '''
							#!/bin/sh
                        	rm -rf /usr/local/myproject/myblog/myblog-1.1.0.jar
                    	  '''
        }
    }
}

task upload(dependsOn: deleteOld) {
    ssh.run {
        session(remotes.deployServer) {
            println 'start upload jar...'
            put from: '.\\build\\libs\\myblog-1.1.0.jar', into: '/usr/local/myproject/myblog/'
        }
    }
}

task deploy(dependsOn: upload){
	ssh.run {
		session(remotes.deployServer) {
			println 'start running...'
			executeScript '''
							#!/bin/sh
                        	  cd /usr/local/myproject/myblog/
                        	  ./start.sh
                    	  '''
		}
	}
}


